import numpy as np
from openmdao.api import ExplicitComponent

class FkComp(ExplicitComponent):

     def initialize(self):
          # define indicies
          self.options.declare('num_point', default=100, types=int)

     def setup(self):
          num_point = self.options['num_point']    
          self.add_input('l1')
          self.add_input('l2')
          self.add_input('thetaL', shape=(num_point, 1))
          self.add_input('thetaR', shape=(num_point, 1))

          self.add_output('x', shape=(num_point, 1))
          self.add_output('y', shape=(num_point, 1))

          rows_indices = np.arange(num_point)
          cols_indices = np.zeros(num_point) 
          self.declare_partials('x','l1', rows=rows_indices, cols=cols_indices)
          self.declare_partials('x','l2', rows=rows_indices, cols=cols_indices)
          self.declare_partials('y','l1', rows=rows_indices, cols=cols_indices)
          self.declare_partials('y','l2', rows=rows_indices, cols=cols_indices)

          self.declare_partials('x','thetaL', rows=rows_indices, cols=rows_indices)
          self.declare_partials('x','thetaR', rows=rows_indices, cols=rows_indices)
          self.declare_partials('y','thetaL', rows=rows_indices, cols=rows_indices)
          self.declare_partials('y','thetaR', rows=rows_indices, cols=rows_indices)

     def compute(self, inputs, outputs):
          thetaL = inputs['thetaL']
          thetaR = inputs['thetaR']
          l1     = inputs['l1']
          l2     = inputs['l2']

          w      = 0.07
          a       = np.sqrt(w ** 2 + l1 ** 2 - 2 * w * l1 * np.cos(thetaR))
          alpha   = np.arcsin(l1 * np.sin(thetaR) / a)
          L       = np.sqrt(l1 ** 2 + a ** 2 - 2 * l1 * a * np.cos(np.pi - alpha - thetaL))
          beta    = np.arcsin(a * np.sin(np.pi - alpha - thetaL) / L)
          thetaL2 = np.pi - beta
          
          '''
          Transmission Matrix
          '''
          def T(theta, x, y): 
               return np.array([[np.cos(theta), -np.sin(theta), x], 
                                [np.sin(theta), np.cos(theta),  y],
                                [0,             0,              1]])

          Fk = T(thetaL, w/2, 0) @ T(thetaL2, l1, 0) @ np.array( [L/2, -np.sqrt(l2 ** 2 - (L/2) ** 2), 1])
          Fk = Fk[:2]
          
          outputs['x'] = Fk[0]
          outputs['y'] = Fk[1]

     def compute_partials(self, inputs, partials):
          thetaL    = inputs['thetaL']
          thetaR    = inputs['thetaR']
          l1        = inputs['l1']
          l2        = inputs['l2']

          # These are (num_point, 1) vectors 
          px_pl1 = -((-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**0.5*np.sin(thetaL) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL))*(-0.5*l1**2 - 0.5*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.035*l1*np.cos(thetaR) + l2**2 - 0.001225)**(-0.5)*(-0.25*l1*(l1 - 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.25*l1*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1*(-l1 + 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.5*l1 - 0.25*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.0175*np.cos(thetaR)) + 0.5*(-(-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**0.5*np.cos(thetaL) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))))*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*(l1*(l1 - 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - l1*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1*(-l1 + 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 2.0*l1 + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.07*np.cos(thetaR)) + 0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(-(l1 - 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - (-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1*(-l1 + 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL)*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - (-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(-0.5*(2.0*l1 - 0.14*np.cos(thetaR))*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) - (-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1*(-l1 + 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) - 0.5*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*(-2.0*l1*(l1 - 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 2.0*l1*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1*(-l1 + 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 4.0*l1 - 2.0*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.14*np.cos(thetaR))*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**2)*np.cos(thetaL) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*(-l1*(l1 - 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + l1*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1*(-l1 + 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 2.0*l1 - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.07*np.cos(thetaR))*np.sin(thetaL)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))) - (-(l1 - 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL) - (-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1*(-l1 + 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaL)*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + (-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(-0.5*(2.0*l1 - 0.14*np.cos(thetaR))*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) - (-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1*(-l1 + 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) - 0.5*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*(-2.0*l1*(l1 - 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 2.0*l1*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1*(-l1 + 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 4.0*l1 - 2.0*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.14*np.cos(thetaR))*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**2)*np.sin(thetaL) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*(-l1*(l1 - 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + l1*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1*(-l1 + 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 2.0*l1 - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.07*np.cos(thetaR))*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL))*(-0.5*l1**2 - 0.5*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.035*l1*np.cos(thetaR) + l2**2 - 0.001225)**0.5 + np.cos(thetaL)
          px_pl2 = -l2*((-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**0.5*np.sin(thetaL) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL))*(-0.5*l1**2 - 0.5*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.035*l1*np.cos(thetaR) + l2**2 - 0.001225)**(-0.5)
          py_pl1 = 0.5*(-(-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**0.5*np.sin(thetaL) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL))*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*(l1*(l1 - 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - l1*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1*(-l1 + 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 2.0*l1 + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.07*np.cos(thetaR)) - (-(-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**0.5*np.cos(thetaL) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))))*(-0.5*l1**2 - 0.5*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.035*l1*np.cos(thetaR) + l2**2 - 0.001225)**(-0.5)*(-0.25*l1*(l1 - 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.25*l1*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1*(-l1 + 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.5*l1 - 0.25*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.0175*np.cos(thetaR)) + 0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*((l1 - 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL) + (-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1*(-l1 + 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaL)*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - (-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(-0.5*(2.0*l1 - 0.14*np.cos(thetaR))*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) - (-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1*(-l1 + 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) - 0.5*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*(-2.0*l1*(l1 - 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 2.0*l1*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1*(-l1 + 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 4.0*l1 - 2.0*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.14*np.cos(thetaR))*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**2)*np.sin(thetaL) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*(-l1*(l1 - 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + l1*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1*(-l1 + 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 2.0*l1 - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.07*np.cos(thetaR))*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL)) - (-(l1 - 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - (-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1*(-l1 + 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL)*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - (-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(-0.5*(2.0*l1 - 0.14*np.cos(thetaR))*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) - (-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1*(-l1 + 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) - 0.5*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*(-2.0*l1*(l1 - 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 2.0*l1*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1*(-l1 + 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 4.0*l1 - 2.0*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.14*np.cos(thetaR))*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**2)*np.cos(thetaL) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*(-l1*(l1 - 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + l1*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1*(-l1 + 0.07*np.cos(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 2.0*l1 - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.07*np.cos(thetaR))*np.sin(thetaL)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))))*(-0.5*l1**2 - 0.5*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.035*l1*np.cos(thetaR) + l2**2 - 0.001225)**0.5 + np.sin(thetaL)
          py_pl2 = -l2*(-(-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**0.5*np.cos(thetaL) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL)*np.sin(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))))*(-0.5*l1**2 - 0.5*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.arcsin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.035*l1*np.cos(thetaR) + l2**2 - 0.001225)**(-0.5)

          partials['x','l1'][:] = px_pl1.flatten()
          partials['x','l2'][:] = px_pl2.flatten()
          partials['y','l1'][:] = py_pl1.flatten()
          partials['y','l2'][:] = py_pl2.flatten()

          # These are (num_point, num_point) matrix 
          px_pthetaL = -0.25*l1*((-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**0.5*np.sin(thetaL) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(-0.5*l1**2 - 0.5*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.035*l1*np.cos(thetaR) + l2**2 - 0.001225)**(-0.5)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.5*l1*(-(-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**0.5*np.cos(thetaL) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - l1*np.sin(thetaL) + 0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(-l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaL)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2 - (-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(-l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**1.5*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**3/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**2 - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049))*np.cos(thetaL) + (-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**0.5*np.sin(thetaL) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL)*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL)) - (-0.5*l1**2 - 0.5*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.035*l1*np.cos(thetaR) + l2**2 - 0.001225)**0.5*(-l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2*np.cos(thetaL) + (-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(-l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**1.5*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**3/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**2 - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049))*np.sin(thetaL) + (-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**0.5*np.cos(thetaL) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaL)*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))))
          px_pthetaR = -((-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**0.5*np.sin(thetaL) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL))*(-0.0175*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR)*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.25*l1*(-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR)**2 + l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaR))*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.0175*l1*np.sin(thetaR))*(-0.5*l1**2 - 0.5*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.035*l1*np.cos(thetaR) + l2**2 - 0.001225)**(-0.5) + 0.5*(-(-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**0.5*np.cos(thetaL) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))))*(0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR)*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - l1*(-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR)**2 + l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaR))*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.07*l1*np.sin(thetaR))*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5) + 0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(-0.07*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL)*np.sin(thetaR)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - (-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR)**2 + l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaR))*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL)*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - (-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(-0.07*l1*np.sin(thetaR)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) - (-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR)**2 + l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaR))*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) - 0.5*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*(-0.14*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR)*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 2.0*l1*(-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR)**2 + l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaR))*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.sin(thetaR))*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**2)*np.cos(thetaL) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR)*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + l1*(-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR)**2 + l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaR))*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.07*l1*np.sin(thetaR))*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaL)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))) - (-0.07*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL) - (-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR)**2 + l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaR))*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaL)*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + (-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(-0.07*l1*np.sin(thetaR)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) - (-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR)**2 + l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaR))*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) - 0.5*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*(-0.14*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR)*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 2.0*l1*(-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR)**2 + l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaR))*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.sin(thetaR))*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**2)*np.sin(thetaL) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR)*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + l1*(-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR)**2 + l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaR))*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.07*l1*np.sin(thetaR))*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL))*(-0.5*l1**2 - 0.5*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.035*l1*np.cos(thetaR) + l2**2 - 0.001225)**0.5
          py_pthetaL = -0.5*l1*(-(-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**0.5*np.sin(thetaL) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.25*l1*(-(-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**0.5*np.cos(thetaL) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))))*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(-0.5*l1**2 - 0.5*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.035*l1*np.cos(thetaR) + l2**2 - 0.001225)**(-0.5)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + l1*np.cos(thetaL) + 0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2*np.cos(thetaL) - (-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(-l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**1.5*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**3/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**2 - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049))*np.sin(thetaL) - (-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**0.5*np.cos(thetaL) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaL)*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))) - (-0.5*l1**2 - 0.5*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.035*l1*np.cos(thetaR) + l2**2 - 0.001225)**0.5*(-l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaL)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2 - (-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(-l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**1.5*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**3/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**2 - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049))*np.cos(thetaL) + (-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**0.5*np.sin(thetaL) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL)*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL))
          py_pthetaR = 0.5*(-(-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**0.5*np.sin(thetaL) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL))*(0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR)*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - l1*(-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR)**2 + l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaR))*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.07*l1*np.sin(thetaR))*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5) - (-(-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**0.5*np.cos(thetaL) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))))*(-0.0175*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR)*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.25*l1*(-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR)**2 + l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaR))*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.0175*l1*np.sin(thetaR))*(-0.5*l1**2 - 0.5*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.035*l1*np.cos(thetaR) + l2**2 - 0.001225)**(-0.5) + 0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(0.07*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL) + (-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR)**2 + l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaR))*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaL)*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - (-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(-0.07*l1*np.sin(thetaR)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) - (-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR)**2 + l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaR))*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) - 0.5*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*(-0.14*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR)*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 2.0*l1*(-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR)**2 + l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaR))*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.sin(thetaR))*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**2)*np.sin(thetaL) + (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR)*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + l1*(-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR)**2 + l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaR))*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.07*l1*np.sin(thetaR))*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL)) - (-0.07*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL)*np.sin(thetaR)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - (-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR)**2 + l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaR))*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaL)*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - (-(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(-0.07*l1*np.sin(thetaR)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) - (-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR)**2 + l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaR))*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049) - 0.5*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)*(-0.14*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR)*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 2.0*l1*(-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR)**2 + l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaR))*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.sin(thetaR))*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)))**2/(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**2)*np.cos(thetaL) - (l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*(-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.sin(thetaR)*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + l1*(-0.07*l1**2*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaR)**2 + l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**(-0.5)*np.cos(thetaR))*(-l1**2*np.sin(thetaR)**2/(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049) + 1.0)**(-0.5)*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.07*l1*np.sin(thetaR))*(2.0*l1**2 + 2.0*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) - 0.14*l1*np.cos(thetaR) + 0.0049)**(-1.5)*np.sin(thetaL)*np.sin(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))))*(-0.5*l1**2 - 0.5*l1*(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049)**0.5*np.cos(thetaL + np.sin(l1*np.sin(thetaR)/np.sqrt(l1**2 - 0.14*l1*np.cos(thetaR) + 0.0049))) + 0.035*l1*np.cos(thetaR) + l2**2 - 0.001225)**0.5
     
          partials['x','thetaL'][:] = px_pthetaL.flatten()
          partials['x','thetaR'][:] = px_pthetaR.flatten()
          partials['y','thetaL'][:] = py_pthetaL.flatten()
          partials['y','thetaR'][:] = py_pthetaR.flatten()

if __name__ == '__main__':

     from _sub_func import SineTrajectory, Ik_5_link
     x = SineTrajectory()[0]
     y = SineTrajectory()[1]

     thetaL = np.zeros(len(x),dtype=float)
     thetaR = np.zeros(len(x),dtype=float)

     for i in range(len(x)):
          theta = Ik_5_link(x[i], y[i])
          thetaL[i] = theta.x[0]
          thetaR[i] = theta.x[1]

     from openmdao.api import Problem, Group, IndepVarComp
     group = Group()

     comp = IndepVarComp()
     comp.add_output('thetaL', val=thetaL)
     comp.add_output('thetaR', val=thetaR)  
     comp.add_output('l1', val=0.09) 
     comp.add_output('l2', val=0.16) 
     group.add_subsystem('comp1', comp, promotes_outputs=['thetaL','thetaR','l1','l2'])

     comp = FkComp()
     group.add_subsystem('comp2', comp, promotes_inputs=['thetaL','thetaR','l1','l2'])

     prob = Problem()
     prob.model = group

     prob.setup()
     prob.run_model()
     prob.model.list_outputs()
     prob.check_partials(compact_print=True)
