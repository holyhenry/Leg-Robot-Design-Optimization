import numpy as np 
import sympy as sp
from sympy.utilities.lambdify import lambdify 
"""
--------------------------PARAMETERS---------------------------
l1  : primary link               l2  : secondary link
w   : distance between motors    L   : length between knee joint
θ_L : left motor angle           θ_R : right motor angle 
θ_L2: knee joint bending angle (with respect to horizontal line)
---------------------------------------------------------------
"""
class five_bar(object):

     def __init__(self, thetaL_s, thetaR_s, l1, l2, w):
          self.thetaL_s = thetaL_s
          self.thetaR_s = thetaR_s
          self.l1 = l1
          self.l2 = l2
          self.w = w

     def get_L_thetaL2(self):
          a       = sp.sqrt(self.w ** 2 + self.l1 ** 2 - 2 * self.w * self.l1 * sp.cos(self.thetaR_s))
          alpha   = sp.asin(self.l1 * sp.sin(self.thetaR_s) / a)
          L       = sp.sqrt(self.l1 ** 2 + a ** 2 - 2 * self.l1 * a * sp.cos(sp.pi - alpha - self.thetaL_s))
          beta    = sp.asin(a * sp.sin(sp.pi - alpha - self.thetaL_s) / L)
          thetaL2 = sp.pi - beta
          return L, thetaL2
     '''
     Transmission Matrix
     '''
     def T(self, theta, x, y): 
          return sp.Matrix([[sp.cos(theta), -sp.sin(theta), x], 
                            [sp.sin(theta), sp.cos(theta),  y],
                            [0,             0,              1]])
     '''
     ---------------------------------------------------------------------------------------------------------------------
     Symbolic Forward Kinematics
     '''
     def get_FK_s(self): 
          [L, thetaL2] = self.get_L_thetaL2()
          FK_s = self.T(self.thetaL_s, self.w/2, 0) @ self.T(thetaL2, self.l1, 0) @ sp.Matrix([L/2, -sp.sqrt(self.l2 ** 2 - (L/2) ** 2), 1])
          # Fk_s = self.T(self.thetaL_s, self.w/2, 0).dot( self.T(thetaL2, self.l1, 0) ).dot(sp.Matrix( [L/2, -sp.sqrt(self.l2 ** 2 - (L/2) ** 2), 1]) )
          FK_s = FK_s[:2,:]
          # print('FK: (shape)', np.shape(FK_s))
          # pprint.pprint(FK_s)
          return FK_s
     '''
     Symbolic Pre-calculated Forward Kinematics (l1=0.09, l2=0.16, w=0.07)
     '''
     def pre_FK_s(self):
          FK_s = sp.Matrix([
               [-(sp.sqrt(-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.sin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.cos(self.thetaL_s + sp.sin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1)*sp.sin(self.thetaL_s) - sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.sin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))*sp.cos(self.thetaL_s)/sp.sqrt(0.18*sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.cos(self.thetaL_s + sp.sin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211))*sp.sqrt(-0.045*sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.cos(self.thetaL_s + sp.sin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) + 0.00315*sp.cos(self.thetaR_s) + 0.020325) + (-sp.sqrt(-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.sin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.cos(self.thetaL_s + sp.sin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1)*sp.cos(self.thetaL_s) - sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s)*sp.sin(self.thetaL_s + sp.sin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))/sp.sqrt(0.18*sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.cos(self.thetaL_s + sp.sin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211))*sp.sqrt(0.18*sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.cos(self.thetaL_s + sp.sin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)/2 + 0.09*sp.cos(self.thetaL_s) + 0.035],
               [        (-sp.sqrt(-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.sin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.cos(self.thetaL_s + sp.sin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1)*sp.sin(self.thetaL_s) + sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.sin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))*sp.cos(self.thetaL_s)/sp.sqrt(0.18*sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.cos(self.thetaL_s + sp.sin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211))*sp.sqrt(0.18*sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.cos(self.thetaL_s + sp.sin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)/2 - (-sp.sqrt(-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.sin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.cos(self.thetaL_s + sp.sin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1)*sp.cos(self.thetaL_s) - sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s)*sp.sin(self.thetaL_s + sp.sin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))/sp.sqrt(0.18*sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.cos(self.thetaL_s + sp.sin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211))*sp.sqrt(-0.045*sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.cos(self.thetaL_s + sp.sin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) + 0.00315*sp.cos(self.thetaR_s) + 0.020325) + 0.09*sp.sin(self.thetaL_s)]])
          # print('FK: (shape)', np.shape(FK_s))
          # pprint.pprint(FK_s)
          return FK_s
     '''
     Forward Kinematics  (x, y) = FK(θ_L, θ_R)
     '''
     def FK_get_position(self, thetaL, theatR):
          FK = lambdify((self.thetaL_s, self.thetaR_s), self.get_FK_s()) # pre_FK_s USED!
          [x, y] = np.ravel(FK(thetaL, theatR))
          return x, y
     '''
     Inverse Linematics (θ_L, θ_R) = IK(x, y)
     '''
     def IK_5_link(self, x, y, l1 = 0.09, l2 = 0.16, w = 0.07):
          from scipy.optimize import minimize
          from scipy.optimize import fsolve

          def leg_wide(var):
               return np.linalg.norm([var[0], var[1] - np.pi]) 

          def x_constraint_equation(var):
               # should be equal to zero when the 
               return l1**2 - l2**2 + (x - w/2)**2 + y**2 - 2*l1*(y*np.sin(var[0]) + (x - w/2)*np.cos(var[0]))

          def y_constraint_equation(var):
               return l1**2 - l2**2 + (x + w/2)**2 + y**2 - 2*l1*(y*np.sin(var[1]) + (x + w/2)*np.cos(var[1]))
  
          res = minimize(leg_wide, (0.1, 9*np.pi/10), method="SLSQP", constraints= ({"type": "eq", "fun": x_constraint_equation}, 
                                                                                     {"type": "eq", "fun": y_constraint_equation}))
          
          return (res.x[0], res.x[1])
     '''
     Pseudo Inverse Kinematics  (θ_L, θ_R) = IK(x, y)
     '''
     def PIK_get_theta(self, x, y, tune = 0.1, tolerence = 10e-3):
          import time
          [thetaL, thetaR] = [0, np.pi] 
          g = self.FK_get_position(thetaL, thetaR)   
          iteration = 1
          t0 = time.time()
          while True:
               if   np.linalg.norm([x - g[0], y - g[1]]) < tolerence:
                    tune = tune/2
                    if np.linalg.norm([x - g[0], y - g[1]]) < tolerence/4:
                         g = np.ravel([g[0], g[1]])
                         t1 = time.time()
                         break
                    if   (x - g[0]) < 0 and (y - g[1]) < 0:
                         thetaR += tune
                         g = self.FK_get_position(thetaL, thetaR)
                    elif (x - g[0]) > 0 and (y - g[1]) < 0:
                         thetaL -= tune
                         g = self.FK_get_position(thetaL, thetaR)
                    elif (x - g[0]) > 0 and (y - g[1]) > 0:
                         thetaR -= tune
                         g = self.FK_get_position(thetaL, thetaR) 
                    else:
                         thetaL += tune
                         g = self.FK_get_position(thetaL, thetaR)
               if   (x - g[0]) < 0 and (y - g[1]) < 0:
                    thetaR += tune
                    g = self.FK_get_position(thetaL, thetaR)
               elif (x - g[0]) > 0 and (y - g[1]) < 0:
                    thetaL -= tune
                    g = self.FK_get_position(thetaL, thetaR)
               elif (x - g[0]) > 0 and (y - g[1]) > 0:
                    thetaR -= tune
                    g = self.FK_get_position(thetaL, thetaR) 
               else:
                    thetaL += tune
                    g = self.FK_get_position(thetaL, thetaR)
               iteration += 1     
          t = t1 - t0
          # print('Target point:    ', [x, y],    '\nConverge point:  ', g, '\nConverge theta θ:', [thetaL, thetaR])
          print('Iteration:       ', iteration, '\nTime:            ', t)
          return thetaL, thetaR
     '''
     ---------------------------------------------------------------------------------------------------------------------
     Symbolic Jacobian Matrix
     '''
     def get_J_s(self):
          J_s = (self.get_FK_s()).jacobian([self.thetaL_s, self.thetaR_s]).evalf()
          return J_s
     '''
     Symbolic Pre-calculated Jacobian Matrix
     '''
     def pre_J_s(self):
          J_s = sp.Matrix([
               [  -0.0225*((-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1.0)**0.5*sp.sin(self.thetaL_s) - (-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))*sp.cos(self.thetaL_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(-0.045*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) + 0.00315*sp.cos(self.thetaR_s) + 0.020325)**(-0.5)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.045*(-(-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1.0)**0.5*sp.cos(self.thetaL_s) - (-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaL_s)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - (-0.045*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) + 0.00315*sp.cos(self.thetaR_s) + 0.020325)**0.5*((-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1.0)**(-0.5)*(-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) - 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**1.5*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**3/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**2)*sp.sin(self.thetaL_s) + (-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1.0)**0.5*sp.cos(self.thetaL_s) + (-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaL_s)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - (-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.cos(self.thetaL_s)*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-1.5)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2*sp.cos(self.thetaL_s)) + 0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**0.5*(-(-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1.0)**(-0.5)*(-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) - 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**1.5*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**3/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**2)*sp.cos(self.thetaL_s) + (-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1.0)**0.5*sp.sin(self.thetaL_s) - (-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaL_s)*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - (-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))*sp.cos(self.thetaL_s) - 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-1.5)*sp.sin(self.thetaL_s)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2) - 0.09*sp.sin(self.thetaL_s), -((-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1.0)**0.5*sp.sin(self.thetaL_s) - (-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))*sp.cos(self.thetaL_s))*(-0.045*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) + 0.00315*sp.cos(self.thetaR_s) + 0.020325)**(-0.5)*(0.0225*(1.0 - 0.0081*sp.sin(self.thetaR_s)**2/(-0.0126*sp.cos(self.thetaR_s) + 0.013))**(-0.5)*(-0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-1.5)*sp.sin(self.thetaR_s)**2 + 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.cos(self.thetaR_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.00014175*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.sin(self.thetaR_s)*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.001575*sp.sin(self.thetaR_s)) + 0.5*(-(-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1.0)**0.5*sp.cos(self.thetaL_s) - (-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaL_s)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))))*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*(-0.09*(1.0 - 0.0081*sp.sin(self.thetaR_s)**2/(-0.0126*sp.cos(self.thetaR_s) + 0.013))**(-0.5)*(-0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-1.5)*sp.sin(self.thetaR_s)**2 + 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.cos(self.thetaR_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) + 0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.sin(self.thetaR_s)*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) + 0.0063*sp.sin(self.thetaR_s)) - (-0.045*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) + 0.00315*sp.cos(self.thetaR_s) + 0.020325)**0.5*(-(1.0 - 0.0081*sp.sin(self.thetaR_s)**2/(-0.0126*sp.cos(self.thetaR_s) + 0.013))**(-0.5)*(-0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-1.5)*sp.sin(self.thetaR_s)**2 + 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.cos(self.thetaR_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.cos(self.thetaL_s)*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) + (-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1.0)**(-0.5)*(-(1.0 - 0.0081*sp.sin(self.thetaR_s)**2/(-0.0126*sp.cos(self.thetaR_s) + 0.013))**(-0.5)*(-0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-1.5)*sp.sin(self.thetaR_s)**2 + 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.cos(self.thetaR_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) - 0.5*(-0.0126*sp.cos(self.thetaR_s) + 0.013)*(0.18*(1.0 - 0.0081*sp.sin(self.thetaR_s)**2/(-0.0126*sp.cos(self.thetaR_s) + 0.013))**(-0.5)*(-0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-1.5)*sp.sin(self.thetaR_s)**2 + 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.cos(self.thetaR_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.001134*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.sin(self.thetaR_s)*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.sin(self.thetaR_s))*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**2 - 0.0063*sp.sin(self.thetaR_s)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211))*sp.sin(self.thetaL_s) - 0.0063*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaR_s)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))*sp.cos(self.thetaL_s) - (-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-1.5)*(0.09*(1.0 - 0.0081*sp.sin(self.thetaR_s)**2/(-0.0126*sp.cos(self.thetaR_s) + 0.013))**(-0.5)*(-0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-1.5)*sp.sin(self.thetaR_s)**2 + 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.cos(self.thetaR_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.sin(self.thetaR_s)*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0063*sp.sin(self.thetaR_s))*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))*sp.cos(self.thetaL_s)) + 0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**0.5*(-(1.0 - 0.0081*sp.sin(self.thetaR_s)**2/(-0.0126*sp.cos(self.thetaR_s) + 0.013))**(-0.5)*(-0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-1.5)*sp.sin(self.thetaR_s)**2 + 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.cos(self.thetaR_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaL_s)*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - (-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1.0)**(-0.5)*(-(1.0 - 0.0081*sp.sin(self.thetaR_s)**2/(-0.0126*sp.cos(self.thetaR_s) + 0.013))**(-0.5)*(-0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-1.5)*sp.sin(self.thetaR_s)**2 + 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.cos(self.thetaR_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) - 0.5*(-0.0126*sp.cos(self.thetaR_s) + 0.013)*(0.18*(1.0 - 0.0081*sp.sin(self.thetaR_s)**2/(-0.0126*sp.cos(self.thetaR_s) + 0.013))**(-0.5)*(-0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-1.5)*sp.sin(self.thetaR_s)**2 + 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.cos(self.thetaR_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.001134*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.sin(self.thetaR_s)*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.sin(self.thetaR_s))*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**2 - 0.0063*sp.sin(self.thetaR_s)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211))*sp.cos(self.thetaL_s) - 0.0063*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaL_s)*sp.sin(self.thetaR_s)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - (-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-1.5)*(0.09*(1.0 - 0.0081*sp.sin(self.thetaR_s)**2/(-0.0126*sp.cos(self.thetaR_s) + 0.013))**(-0.5)*(-0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-1.5)*sp.sin(self.thetaR_s)**2 + 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.cos(self.thetaR_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.sin(self.thetaR_s)*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0063*sp.sin(self.thetaR_s))*sp.sin(self.thetaL_s)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))))],
               [-0.045*(-(-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1.0)**0.5*sp.sin(self.thetaL_s) + (-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))*sp.cos(self.thetaL_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0225*(-(-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1.0)**0.5*sp.cos(self.thetaL_s) - (-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaL_s)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(-0.045*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) + 0.00315*sp.cos(self.thetaR_s) + 0.020325)**(-0.5)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - (-0.045*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) + 0.00315*sp.cos(self.thetaR_s) + 0.020325)**0.5*(-(-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1.0)**(-0.5)*(-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) - 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**1.5*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**3/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**2)*sp.cos(self.thetaL_s) + (-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1.0)**0.5*sp.sin(self.thetaL_s) - (-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaL_s)*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - (-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))*sp.cos(self.thetaL_s) - 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-1.5)*sp.sin(self.thetaL_s)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2) + 0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**0.5*(-(-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1.0)**(-0.5)*(-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) - 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**1.5*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**3/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**2)*sp.sin(self.thetaL_s) - (-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1.0)**0.5*sp.cos(self.thetaL_s) - (-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaL_s)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) + (-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.cos(self.thetaL_s)*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) + 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-1.5)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2*sp.cos(self.thetaL_s)) + 0.09*sp.cos(self.thetaL_s),  0.5*(-(-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1.0)**0.5*sp.sin(self.thetaL_s) + (-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))*sp.cos(self.thetaL_s))*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*(-0.09*(1.0 - 0.0081*sp.sin(self.thetaR_s)**2/(-0.0126*sp.cos(self.thetaR_s) + 0.013))**(-0.5)*(-0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-1.5)*sp.sin(self.thetaR_s)**2 + 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.cos(self.thetaR_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) + 0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.sin(self.thetaR_s)*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) + 0.0063*sp.sin(self.thetaR_s)) - (-(-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1.0)**0.5*sp.cos(self.thetaL_s) - (-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaL_s)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))))*(-0.045*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) + 0.00315*sp.cos(self.thetaR_s) + 0.020325)**(-0.5)*(0.0225*(1.0 - 0.0081*sp.sin(self.thetaR_s)**2/(-0.0126*sp.cos(self.thetaR_s) + 0.013))**(-0.5)*(-0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-1.5)*sp.sin(self.thetaR_s)**2 + 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.cos(self.thetaR_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.00014175*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.sin(self.thetaR_s)*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.001575*sp.sin(self.thetaR_s)) - (-0.045*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) + 0.00315*sp.cos(self.thetaR_s) + 0.020325)**0.5*(-(1.0 - 0.0081*sp.sin(self.thetaR_s)**2/(-0.0126*sp.cos(self.thetaR_s) + 0.013))**(-0.5)*(-0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-1.5)*sp.sin(self.thetaR_s)**2 + 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.cos(self.thetaR_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaL_s)*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - (-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1.0)**(-0.5)*(-(1.0 - 0.0081*sp.sin(self.thetaR_s)**2/(-0.0126*sp.cos(self.thetaR_s) + 0.013))**(-0.5)*(-0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-1.5)*sp.sin(self.thetaR_s)**2 + 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.cos(self.thetaR_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) - 0.5*(-0.0126*sp.cos(self.thetaR_s) + 0.013)*(0.18*(1.0 - 0.0081*sp.sin(self.thetaR_s)**2/(-0.0126*sp.cos(self.thetaR_s) + 0.013))**(-0.5)*(-0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-1.5)*sp.sin(self.thetaR_s)**2 + 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.cos(self.thetaR_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.001134*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.sin(self.thetaR_s)*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.sin(self.thetaR_s))*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**2 - 0.0063*sp.sin(self.thetaR_s)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211))*sp.cos(self.thetaL_s) - 0.0063*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaL_s)*sp.sin(self.thetaR_s)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - (-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-1.5)*(0.09*(1.0 - 0.0081*sp.sin(self.thetaR_s)**2/(-0.0126*sp.cos(self.thetaR_s) + 0.013))**(-0.5)*(-0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-1.5)*sp.sin(self.thetaR_s)**2 + 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.cos(self.thetaR_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.sin(self.thetaR_s)*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0063*sp.sin(self.thetaR_s))*sp.sin(self.thetaL_s)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))) + 0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**0.5*((1.0 - 0.0081*sp.sin(self.thetaR_s)**2/(-0.0126*sp.cos(self.thetaR_s) + 0.013))**(-0.5)*(-0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-1.5)*sp.sin(self.thetaR_s)**2 + 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.cos(self.thetaR_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.cos(self.thetaL_s)*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - (-(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) + 1.0)**(-0.5)*(-(1.0 - 0.0081*sp.sin(self.thetaR_s)**2/(-0.0126*sp.cos(self.thetaR_s) + 0.013))**(-0.5)*(-0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-1.5)*sp.sin(self.thetaR_s)**2 + 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.cos(self.thetaR_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211) - 0.5*(-0.0126*sp.cos(self.thetaR_s) + 0.013)*(0.18*(1.0 - 0.0081*sp.sin(self.thetaR_s)**2/(-0.0126*sp.cos(self.thetaR_s) + 0.013))**(-0.5)*(-0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-1.5)*sp.sin(self.thetaR_s)**2 + 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.cos(self.thetaR_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.001134*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.sin(self.thetaR_s)*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.sin(self.thetaR_s))*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**2 - 0.0063*sp.sin(self.thetaR_s)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))**2/(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211))*sp.sin(self.thetaL_s) + 0.0063*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-0.5)*sp.sin(self.thetaR_s)*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))*sp.cos(self.thetaL_s) + (-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*(0.18*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0126*sp.cos(self.thetaR_s) + 0.0211)**(-1.5)*(0.09*(1.0 - 0.0081*sp.sin(self.thetaR_s)**2/(-0.0126*sp.cos(self.thetaR_s) + 0.013))**(-0.5)*(-0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-1.5)*sp.sin(self.thetaR_s)**2 + 0.09*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.cos(self.thetaR_s))*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**0.5*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.000567*(-0.0126*sp.cos(self.thetaR_s) + 0.013)**(-0.5)*sp.sin(self.thetaR_s)*sp.cos(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013))) - 0.0063*sp.sin(self.thetaR_s))*sp.sin(self.thetaL_s + sp.asin(0.09*sp.sin(self.thetaR_s)/sp.sqrt(-0.0126*sp.cos(self.thetaR_s) + 0.013)))*sp.cos(self.thetaL_s))]])
          # print('\nJacobian: (shape)', np.shape(J_s))
          # pprint.pprint(J_s)
          return J_s
     '''
     Jacobain Matrix
     '''

class trajectory(object):

     def __init__(self, par = [0.12, 0.03, 0.05, 0.18]):
          self.StepLength   = par[0]
          self.DownAMP      = par[1]
          self.UpperAMP     = par[2]
          self.StanceHeight = par[3]
     '''
     Sinesoid Trajectory
     '''
     def SineTrajectory(self, num_point = 100):
          StancePercent = 0.6
          SwingPercent = 1 - StancePercent
          CurrentPercent = np.array([(a + 1) / num_point for a in range(num_point)])

          x = np.zeros(len(CurrentPercent), dtype=float)
          y = np.zeros(len(CurrentPercent), dtype=float)

          for i in range(len(CurrentPercent)):
               if (CurrentPercent[i] <= StancePercent):
                    x[i] = -(self.StepLength / 2) + (CurrentPercent[i] / StancePercent) * self.StepLength
                    y[i] =  self.DownAMP * np.sin(np.pi * CurrentPercent[i] / StancePercent) + self.StanceHeight
               else:
                    x[i] = (self.StepLength / 2) - ((CurrentPercent[i] - StancePercent) / SwingPercent) * self.StepLength
                    y[i] = -self.UpperAMP * np.sin(np.pi * (CurrentPercent[i] - StancePercent) / SwingPercent) + self.StanceHeight
          return x, y
